{"version":3,"sources":["components/common/input.jsx","components/common/form.jsx","components/common/registerForm.jsx","components/common/loginForm.jsx","components/movieForm.jsx","components/customers.jsx","components/notFound.jsx","components/rentals.jsx","services/fakeGenreService.js","services/fakeMovieService.js","components/common/pagination.jsx","utils/paginate.js","components/common/listGroup.jsx","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/moviesTable.jsx","components/movies.jsx","components/navBar.jsx","App.js","index.js"],"names":["Input","name","label","error","rest","className","htmlFor","id","Form","state","data","errors","validate","Joi","schema","abortEarly","details","item","path","message","validateProperty","value","obj","handleSubmit","e","preventDefault","setState","doSubmit","handleChange","input","currentTarget","errorMessage","disabled","this","type","onChange","Component","RegisterForm","username","password","string","required","email","min","console","onSubmit","renderInput","renderButton","LoginForm","log","MovieForm","match","history","params","onClick","push","Customers","NotFound","Rentals","genres","_id","movies","title","genre","numberInStock","dailyRentalRate","publishDate","liked","Pagination","props","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","_","range","map","page","key","paginate","items","pageNumber","startIndex","slice","take","ListGroup","onItemSelect","textProperty","valueProperty","selectedItem","style","cursor","defaultProps","Like","classes","aria-hidden","TableHeader","raiseSort","sortColumn","order","onSort","renderSortIcon","column","columns","TableBody","renderCall","content","get","createKey","Table","MoviesTable","movie","Link","to","onLike","onDelete","Movies","selectedGenre","handleDelete","filter","m","handleLike","index","indexOf","handlePageChange","handleGenreSelect","handleSort","getPagedData","allMovies","filtered","orderBy","totalCount","length","g","count","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","App","Fragment","Switch","Route","component","Redirect","exact","from","ReactDOM","render","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.cc118aff.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n    return (    \r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input \r\n                {...rest}\r\n                name={name}\r\n                id={name} \r\n                className=\"form-control\"\r\n            />\r\n            {error && <div className=\"alert alert-danger\">{error}</div>}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Input;","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Input from './input';\r\n\r\nclass Form extends Component {\r\n    state = { \r\n        data: {},\r\n        errors: {}\r\n    }\r\n    \r\n    validate = () => {\r\n        const options = { abortEarly: false };\r\n        const { error } = Joi.validate(this.state.data, this.schema, options);\r\n\r\n        if(!error)\r\n            return null;\r\n\r\n        const errors = {};\r\n        for(let item of error.details)\r\n            errors[item.path[0]] = item.message;\r\n        return errors;\r\n    }\r\n\r\n    validateProperty = ({ name, value }) => {\r\n        const obj = { [name]: value }; \r\n        const schema = {\r\n            [name]: this.schema[name],\r\n        }\r\n        \r\n        const { error } = Joi.validate(obj, schema);\r\n\r\n        return error ? error.details[0].message : null;\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const errors = this.validate();\r\n        this.setState({\r\n            errors: errors || {}\r\n        });\r\n\r\n        if(errors)\r\n            return;\r\n\r\n        this.doSubmit();\r\n    }\r\n\r\n    handleChange = ({ currentTarget: input }) => {\r\n        const errors = {...this.state.errors};\r\n        const errorMessage = this.validateProperty(input);\r\n        if(errorMessage)\r\n            errors[input.name] = errorMessage;\r\n        else\r\n            delete errors[input.name];\r\n\r\n        const data = {...this.state.data};\r\n        data[input.name] = input.value;\r\n\r\n        this.setState({\r\n            data,\r\n            errors\r\n        })\r\n    }\r\n\r\n    renderButton(label){\r\n        return(\r\n            <button \r\n                disabled={this.validate()}\r\n                className=\"btn btn-primary\"\r\n            >{label}</button>\r\n        )\r\n    }\r\n\r\n    renderInput(name, label, type = 'text') {\r\n        const { data, errors } = this.state;\r\n\r\n        return(\r\n            <Input\r\n                type={type}\r\n                name={name}\r\n                value={data[name]}\r\n                label={label}\r\n                onChange={this.handleChange}\r\n                error={errors[name]}\r\n            />\r\n        )\r\n    }\r\n}\r\n \r\nexport default Form;","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './form';\r\n\r\nclass RegisterForm extends Form {\r\n    state = { \r\n        data: {\r\n            username: \"\",\r\n            password: \"\",\r\n            name: \"\",\r\n        },\r\n        errors: {},\r\n    }\r\n    \r\n    schema = {\r\n        username: Joi.string()\r\n                    .required()\r\n                    .email()\r\n                    .label('Username'),\r\n        password: Joi.string()\r\n                    .required()\r\n                    .min(5)\r\n                    .label('Password'),\r\n        name: Joi.string()\r\n                    .required()\r\n                    .label('Name')\r\n    }\r\n\r\n    doSubmit = () => {\r\n        //call the server\r\n        console.label(\"Submit register\");\r\n    }\r\n\r\n    render() { \r\n        return (  \r\n            <div className=\"container\">\r\n                <h1>Register</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {this.renderInput('username', 'Username')}\r\n                    {this.renderInput('password', 'Password', 'password')}\r\n                    {this.renderInput('name', 'Name')}\r\n                    {this.renderButton(\"Register\")}\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default RegisterForm;","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './form';\r\n\r\nclass LoginForm extends Form {\r\n    state = {\r\n        data: {\r\n            username: '',\r\n            password: ''\r\n        },\r\n        errors: {},\r\n    }\r\n\r\n    schema = {\r\n        username: Joi.string().required().label('Username'),\r\n        password: Joi.string().required().label('Password')\r\n    };\r\n  \r\n\r\n    doSubmit = () => {\r\n        // call the server\r\n        console.log(\"Submited\");\r\n    }    \r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"container\">\r\n                <h1>Login</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    \r\n                    {this.renderInput('username', 'Username')}\r\n\r\n                    {this.renderInput('password', 'Password', 'password')}\r\n\r\n                    {this.renderButton('Login')}\r\n                </form>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default LoginForm;","import React from 'react';\r\n\r\nconst MovieForm = ({ match, history }) => {\r\n    return (\r\n        <div>\r\n            <h1>MovieForm: {match.params.id}</h1>\r\n            <button className=\"btn btn-primary\" onClick={() => history.push('/movies')}>Save</button>\r\n        </div> \r\n     );\r\n}\r\n \r\nexport default MovieForm;","import React from 'react';\r\n\r\nconst Customers = () => {\r\n    return ( \r\n        <h1>Customers</h1>\r\n     );\r\n}\r\n \r\nexport default Customers;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (  \r\n        <h1>Not Found</h1>\r\n    );\r\n}\r\n \r\nexport default NotFound;","import React from 'react';\r\n\r\nconst Rentals = () => {\r\n    return ( \r\n        <h1>Rentals</h1>\r\n     );\r\n}\r\n \r\nexport default Rentals;","export const genres = [\r\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\r\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\r\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\r\n];\r\n\r\nexport function getGenres() {\r\n  return genres.filter(g => g);\r\n}\r\n","import * as genresAPI from \"./fakeGenreService\";\r\n\r\nconst movies = [\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd471815\",\r\n    title: \"Terminator\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\r\n    numberInStock: 6,\r\n    dailyRentalRate: 2.5,\r\n    publishDate: \"2018-01-03T19:04:28.809Z\",\r\n    liked: true,\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd471816\",\r\n    title: \"Die Hard\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\r\n    numberInStock: 5,\r\n    dailyRentalRate: 2.5\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd471817\",\r\n    title: \"Get Out\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\r\n    numberInStock: 8,\r\n    dailyRentalRate: 3.5,\r\n    liked: true,\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd471819\",\r\n    title: \"Trip to Italy\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\r\n    title: \"Airplane\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\r\n    title: \"Wedding Crashers\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\r\n    title: \"Gone Girl\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 4.5\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\r\n    title: \"The Sixth Sense\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\r\n    numberInStock: 4,\r\n    dailyRentalRate: 3.5\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd471821\",\r\n    title: \"The Avengers\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5\r\n  }\r\n];\r\n\r\nexport function getMovies() {\r\n  return movies;\r\n}\r\n\r\nexport function getMovie(id) {\r\n  return movies.find(m => m._id === id);\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\r\n  movieInDb.name = movie.name;\r\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\r\n  movieInDb.numberInStock = movie.numberInStock;\r\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\r\n\r\n  if (!movieInDb._id) {\r\n    movieInDb._id = Date.now();\r\n    movies.push(movieInDb);\r\n  }\r\n\r\n  return movieInDb;\r\n}\r\n\r\nexport function deleteMovie(id) {\r\n  let movieInDb = movies.find(m => m._id === id);\r\n  movies.splice(movies.indexOf(movieInDb), 1);\r\n  return movieInDb;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nconst Pagination = (props) => {\r\n    const { itemsCount, pageSize, currentPage, onPageChange } = props;\r\n    const pagesCount = Math.ceil(itemsCount / pageSize);\r\n\r\n    if(pagesCount === 1)\r\n        return null;\r\n\r\n    const pages = _.range(1, pagesCount + 1);\r\n\r\n    return (  \r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                {\r\n                    pages.map(page => (\r\n                        <li key={page} className={page === currentPage ? 'page-item active' : 'page-item'}>\r\n                            <a \r\n                                className=\"page-link\"\r\n                                onClick={() => onPageChange(page)}\r\n                            >{page}</a>\r\n                        </li>\r\n                    ))\r\n                }\r\n                \r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nPagination.propTypes = {\r\n    itemsCount: PropTypes.number.isRequired, \r\n    pageSize: PropTypes.number.isRequired, \r\n    currentPage: PropTypes.number.isRequired, \r\n    onPageChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Pagination;","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n   \r\n    return _(items)\r\n                .slice(startIndex)\r\n                .take(pageSize)\r\n                .value();\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ListGroup = (props) => {\r\n    const { items, onItemSelect, textProperty, valueProperty, selectedItem } = props;\r\n\r\n    return ( \r\n        <ul className=\"list-group\">\r\n            {\r\n                items.map(item => \r\n                    <li\r\n                        onClick={() => onItemSelect(item)} \r\n                        key={item[valueProperty]}\r\n                        className={item === selectedItem ? \"list-group-item active\" : \"list-group-item\"}\r\n                        style={{cursor: 'pointer'}}\r\n                    >{item[textProperty]}</li>                    \r\n                )\r\n            }\r\n        </ul>\r\n     );\r\n}\r\n\r\nListGroup.defaultProps = {\r\n    textProperty: 'name', \r\n    valueProperty: '_id'\r\n}\r\n\r\nListGroup.propTypes = { \r\n    items: PropTypes.array.isRequired, \r\n    onItemSelect: PropTypes.func.isRequired,\r\n    textProperty: PropTypes.string.isRequired,\r\n    valueProperty: PropTypes.string.isRequired,\r\n    selectedItem: PropTypes.object\r\n}\r\n\r\nexport default ListGroup;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Like = (props) => {    \r\n        let classes = \"fa fa-heart\";\r\n        if(!props.liked)\r\n            classes += \"-o\";\r\n\r\n        return ( \r\n            <i \r\n                className={classes} \r\n                aria-hidden=\"true\" \r\n                style={{cursor: 'pointer'}}\r\n                onClick={props.onClick}\r\n            ></i>\r\n         );\r\n}\r\n\r\nLike.propTypes = {\r\n    liked: PropTypes.bool,\r\n    onClick: PropTypes.func.isRequired\r\n}\r\n \r\nexport default Like;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass TableHeader extends Component {\r\n    raiseSort = (path) => {\r\n        const sortColumn = {...this.props.sortColumn};\r\n        if(sortColumn.path === path)\r\n            sortColumn.order = (sortColumn.order === 'asc' ? 'desc' : 'asc');\r\n        else {\r\n            sortColumn.path = path;\r\n            sortColumn.order = 'asc';\r\n        }\r\n\r\n        this.props.onSort(sortColumn);\r\n    }\r\n\r\n    renderSortIcon = (column) => {\r\n        const { sortColumn } = this.props;\r\n\r\n        if(column.path !== sortColumn.path)\r\n            return null;\r\n        \r\n        if(sortColumn.order === 'asc')\r\n            return <i className=\"fa fa-sort-asc\"></i>\r\n\r\n        return <i className=\"fa fa-sort-desc\"></i>\r\n    }\r\n    \r\n    render() { \r\n        return ( \r\n            <thead>\r\n                <tr>\r\n                    { this.props.columns.map(column => (\r\n                        <th \r\n                            className=\"clickable\"\r\n                            key={column.path || column.key} \r\n                            onClick={() => this.raiseSort(column.path)}\r\n                        >\r\n                            {column.label} {this.renderSortIcon(column)}\r\n                        </th>\r\n                    ))}\r\n                </tr>\r\n            </thead>\r\n         );\r\n    }\r\n}\r\n\r\nTableHeader.propTypes = {\r\n    columns: PropTypes.array.isRequired,\r\n    sortColumn: PropTypes.object.isRequired,\r\n    onSort: PropTypes.func.isRequired\r\n}\r\n \r\nexport default TableHeader;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nclass TableBody extends Component {\r\n    renderCall = (item, column) => {\r\n        if(column.content)\r\n            return column.content(item);\r\n\r\n        return _.get(item, column.path)\r\n    };\r\n\r\n    createKey = (item, column) => item._id + (column.path || column.key);\r\n\r\n    render() { \r\n        const { data, columns } = this.props;\r\n\r\n        return ( \r\n            <tbody>\r\n                {data.map(item => (\r\n                    <tr key={item._id}>\r\n                        {columns.map(column => \r\n                            <td key={this.createKey(item, column)}>\r\n                                {this.renderCall(item, column)}\r\n                            </td>)\r\n                        }\r\n                    </tr>\r\n                ))}\r\n\r\n            </tbody>\r\n         );\r\n    }\r\n}\r\n\r\nTableBody.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    columns: PropTypes.array.isRequired\r\n}\r\n \r\nexport default TableBody;","import React from 'react';\r\nimport TableHeader from './tableHeader';\r\nimport TableBody from './tableBody';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Table = ({ columns, sortColumn, data, onSort }) => {\r\n    return (  \r\n        <table className=\"table\">\r\n            <TableHeader \r\n                columns={columns} \r\n                sortColumn={sortColumn} \r\n                onSort={onSort} \r\n            />\r\n\r\n            <TableBody\r\n                columns={columns}\r\n                data={data}\r\n            />\r\n        </table>\r\n    );\r\n}\r\n \r\nTable.propTypes = {\r\n    columns: PropTypes.array.isRequired,\r\n    sortColumn: PropTypes.object.isRequired,\r\n    data: PropTypes.array.isRequired,\r\n    onSort: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Table;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Like from './common/like';\r\nimport Table from './common/table';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass MoviesTable extends Component {\r\n    columns = [\r\n        { path: 'title', label: 'Title', content: (movie) => <Link to={`/movies/${movie._id}`}>{movie.title}</Link> },\r\n        { path: 'genre.name', label: 'Genre' },\r\n        { path: 'numberInStock', label: 'Stock' },\r\n        { path: 'dailyRentalRate', label: 'Rate' },\r\n        { \r\n            key: 'like', \r\n            content: (movie) => <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} /> \r\n        },\r\n        { \r\n            key: 'delete', \r\n            content: (movie) => <button onClick={() => this.props.onDelete(movie)} className=\"btn btn-danger btn-sm\">Delete</button>\r\n        },\r\n    ]\r\n\r\n    render() {\r\n        const { movies, sortColumn, onSort} = this.props;        \r\n    \r\n        return (  \r\n            <Table\r\n                columns={this.columns}\r\n                data={movies} \r\n                sortColumn={sortColumn} \r\n                onSort={onSort}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nMoviesTable.propTypes = {\r\n    movies: PropTypes.array.isRequired,\r\n    onLike: PropTypes.func.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n    onSort: PropTypes.func.isRequired,\r\n    sortColumn: PropTypes.object.isRequired,\r\n}\r\n \r\nexport default MoviesTable;","import React, { Component } from 'react';\r\nimport { getMovies } from '../services/fakeMovieService';\r\nimport Pagination from './common/pagination';\r\nimport { getGenres } from '../services/fakeGenreService';\r\nimport { paginate } from '../utils/paginate';\r\nimport ListGroup from './common/listGroup';\r\nimport MoviesTable from './moviesTable';\r\nimport _ from 'lodash';\r\n\r\nclass Movies extends Component {\r\n    state = { \r\n        movies: [],\r\n        genres: [],\r\n        selectedGenre: null,\r\n        currentPage: 1,\r\n        pageSize: 4,\r\n        sortColumn: {\r\n            path: 'title',\r\n            order: 'asc'\r\n        }\r\n     }\r\n\r\n    componentDidMount() {\r\n        const genres = [{_id: '', name: \"All Movies\"}, ...getGenres()];\r\n\r\n        this.setState({\r\n            movies: getMovies(),\r\n            genres,\r\n        });\r\n    }\r\n\r\n    handleDelete = (movie) => {\r\n        const movies = this.state.movies.filter(m => m._id !== movie._id);\r\n\r\n        this.setState({\r\n            movies\r\n        })\r\n    }\r\n\r\n    handleLike = (movie) => {\r\n        const movies = [...this.state.movies];\r\n        const index = movies.indexOf(movie);\r\n        movies[index] = {...movies[index]};\r\n        movies[index].liked = !movies[index].liked;\r\n\r\n        this.setState({\r\n            movies\r\n        })\r\n    }\r\n\r\n    handlePageChange = (page) => {\r\n        this.setState({\r\n            currentPage: page,\r\n        })\r\n    }\r\n\r\n    handleGenreSelect = (genre) => {\r\n        this.setState({\r\n            selectedGenre: genre,\r\n            currentPage: 1,\r\n        })\r\n    }\r\n\r\n    handleSort = (sortColumn) => {\r\n        this.setState({\r\n            sortColumn\r\n        });\r\n    }\r\n\r\n    getPagedData = () => {\r\n        const { pageSize, currentPage, selectedGenre, movies: allMovies, sortColumn } = this.state;\r\n        \r\n        const filtered = (selectedGenre && selectedGenre._id) ? allMovies.filter(m => m.genre._id ===  selectedGenre._id) : allMovies;\r\n        const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n    \r\n        const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n        return {\r\n            data: movies,\r\n            totalCount: filtered.length\r\n        }\r\n    }\r\n\r\n    render() { \r\n        const { length: count } = this.state.movies;\r\n        const { pageSize, currentPage, sortColumn } = this.state;\r\n\r\n        if(count === 0)\r\n            return <p>There are no movies in the database</p>     \r\n\r\n        const { totalCount, data: movies } = this.getPagedData();\r\n\r\n        return ( \r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <ListGroup \r\n                        items={this.state.genres}\r\n                        selectedItem={this.state.selectedGenre} \r\n                        onItemSelect={this.handleGenreSelect}\r\n                    />\r\n                </div>\r\n                \r\n                <div className=\"col\">\r\n                    <p>Showing {totalCount} movies int the database.</p>\r\n                    \r\n                    <MoviesTable \r\n                        movies={movies} \r\n                        onLike={this.handleLike} \r\n                        sortColumn={sortColumn}\r\n                        onDelete={this.handleDelete}\r\n                        onSort={this.handleSort}\r\n                    />\r\n\r\n                    <Pagination \r\n                        itemsCount={totalCount}\r\n                        pageSize={pageSize}\r\n                        currentPage={currentPage}\r\n                        onPageChange={this.handlePageChange}\r\n                    />\r\n                </div>                \r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Movies;","import React from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <Link className=\"navbar-brand\" to=\"/\">Vidly</Link>\r\n            \r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            \r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/movies\">Movies</NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/customers\">Customers</NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/rentals\">Rentals</NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/register\">Register</NavLink>\r\n                </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n \r\nexport default NavBar;","import React from 'react';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\nimport RegisterForm from './components/common/registerForm';\r\nimport LoginForm from './components/common/loginForm';\r\nimport MovieForm from './components/movieForm';\r\nimport Customers from './components/customers';\r\nimport NotFound from './components/notFound';\r\nimport Rentals from './components/rentals';\r\nimport Movies from './components/movies';\r\nimport NavBar from './components/navBar';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <NavBar />\r\n      <main className=\"container\">\r\n        \r\n        <Switch>\r\n          <Route path=\"/login\" component={LoginForm} />\r\n          <Route path=\"/register\" component={RegisterForm} />\r\n          <Route path=\"/movies/:id\" component={MovieForm} />\r\n          <Route path=\"/movies\" component={Movies}></Route>\r\n          <Route path=\"/customers\" component={Customers}></Route>\r\n          <Route path=\"/rentals\" component={Rentals}></Route>\r\n          <Route path=\"/not-found\" component={NotFound}></Route>\r\n          <Redirect exact from=\"/\" to=\"/movies\" />\r\n          <Redirect to=\"/not-found\" />\r\n        </Switch>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'font-awesome/css/font-awesome.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}